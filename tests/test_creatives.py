import jsonimport osimport timeimport pytestfrom configurations import generic_modulesfrom locators.creative.creative_form_locator import CreativeFormLocatorsfrom pages.base_page import BasePagefrom pages.creatives.creative_form import DspDashboardCreativeFormfrom pages.creatives.creative_list import DspDashboardCreativeListfrom pages.sidebar.sidebar import DashboardSidebarPagefrom utils.compare import CompareUtils as CompareUtil@pytest.mark.skipif("JENKINS_URL" in os.environ, reason="Test need to be run manually")def test_add_banner_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_banner_data.json') as json_file:        banner_creative_data = json.load(json_file)    banner_creative_data['general_information']['title'] = banner_creative_data['general_information'][                                                               'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_file_banner_grid_data.json') as json_file:        banner_creative_data_from_grid = json.load(json_file)    banner_creative_data_from_grid['general_information']['title'] = banner_creative_data['general_information'][        'title']    # CREATE BANNER TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(banner_creative_data)    creative_form_page.provide_info_into_add_creative_file_banner_form(banner_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(banner_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid()    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            banner_creative_data_from_grid)    creative_list_page.search_and_action(banner_creative_data['general_information']['title'], "Edit")    pulled_creative_data_from_gui = creative_form_page.get_banner_creative_information_from_form_page(        banner_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            banner_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(banner_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_native_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    base_page = BasePage(driver)    with open('assets/creatives/creatives_native_data.json') as json_file:        native_creative_data = json.load(json_file)    native_creative_data['general_information']['title'] = native_creative_data['general_information'][                                                               'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_native_grid_data.json') as json_file:        native_creative_data_from_grid = json.load(json_file)    native_creative_data_from_grid['general_information']['title'] = native_creative_data['general_information'][        'title']    # CREATE NATIVE TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(native_creative_data)    creative_form_page.provide_info_into_add_creative_native_form(native_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(native_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid()    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            native_creative_data_from_grid)    creative_list_page.search_and_action(native_creative_data['general_information']['title'], "Edit")    base_page.wait_for_visibility_of_element(CreativeFormLocators.icon_image_dimension_locator)    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_gui = creative_form_page.get_native_creative_information_from_form_page(        native_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            native_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(native_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_engagement_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    base_page = BasePage(driver)    with open('assets/creatives/creatives_engagement_data.json') as json_file:        engagement_creative_data = json.load(json_file)    engagement_creative_data['general_information']['title'] = engagement_creative_data['general_information'][                                                                   'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_engagement_grid_data.json') as json_file:        engagement_creative_data_from_grid = json.load(json_file)    engagement_creative_data_from_grid['general_information']['title'] = \        engagement_creative_data['general_information']['title']    # CREATE ENGAGEMENT TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(engagement_creative_data)    creative_form_page.provide_info_into_add_creative_engagement_form()    # DATA VERIFICATION    creative_list_page.search_and_action(engagement_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid()    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            engagement_creative_data_from_grid)    creative_list_page.search_and_action(engagement_creative_data['general_information']['title'], "Edit")    base_page.wait_for_visibility_of_element(CreativeFormLocators.dimensions_locator)    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_gui = creative_form_page.get_engagement_creative_information_from_form_page(        engagement_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            engagement_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(engagement_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_carousel_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_carousel_data.json') as json_file:        carousel_creative_data = json.load(json_file)    carousel_creative_data['general_information']['title'] = carousel_creative_data['general_information'][                                                                 'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_carousel_grid_data.json') as json_file:        carousel_creative_data_from_grid = json.load(json_file)    carousel_creative_data_from_grid['general_information']['title'] = \        carousel_creative_data['general_information']['title']    # CREATE CAROUSEL TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(carousel_creative_data)    creative_form_page.provide_info_into_add_creative_carousel_form(carousel_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(carousel_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid()    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            carousel_creative_data_from_grid)    creative_list_page.search_and_action(carousel_creative_data['general_information']['title'], "Edit")    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_gui = creative_form_page.get_carousel_creative_information_from_form_page(        carousel_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            carousel_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(carousel_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()@pytest.mark.skipif("JENKINS_URL" in os.environ, reason="Test need to be run manually")def test_add_ibv_video_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_ibv_video_data.json') as json_file:        ibv_video_creative_data = json.load(json_file)    ibv_video_creative_data['general_information']['title'] = ibv_video_creative_data['general_information'][                                                                  'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_ibv_video_grid_data.json') as json_file:        ibv_video_creative_grid_data = json.load(json_file)    ibv_video_creative_grid_data['general_information']['title'] = ibv_video_creative_data['general_information'][        'title']    # CREATE IBV VIDEO TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(ibv_video_creative_data)    creative_form_page.provide_info_into_add_creative_ibv_video_form(ibv_video_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(ibv_video_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid()    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            ibv_video_creative_grid_data)    creative_list_page.search_and_action(ibv_video_creative_data['general_information']['title'], "Edit")    pulled_creative_data_from_gui = creative_form_page.get_ibv_video_creative_information_from_form_page(        ibv_video_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            ibv_video_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(ibv_video_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_vast_ibv_video_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_vast_ibv_video_data.json') as json_file:        vast_ibv_video_creative_data = json.load(json_file)    vast_ibv_video_creative_data['general_information']['title'] = vast_ibv_video_creative_data['general_information'][                                                                       'title'] + generic_modules.get_random_string(5)    creative_to_delete = vast_ibv_video_creative_data['general_information']['title']    with open('assets/creatives/creatives_vast_ibv_video_grid_data.json') as json_file:        vast_ibv_video_creative_grid_data = json.load(json_file)    with open('assets/creatives/creatives_ibv_video_data.json') as json_file:        ibv_video_creative_data = json.load(json_file)    ibv_video_creative_data['general_information']['title'] = vast_ibv_video_creative_data['general_information'][                                                                  'title'] + " (IBV)"    vast_ibv_video_creative_grid_data['general_information_for_vast']['title'] = \        vast_ibv_video_creative_data['general_information']['title'] + " (VAST)"    vast_ibv_video_creative_grid_data['general_information_for_ibv']['title'] = \        vast_ibv_video_creative_data['general_information']['title'] + " (IBV)"    # CREATE VAST + IBV VIDEO TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(vast_ibv_video_creative_data)    creative_form_page.provide_info_into_add_creative_vast_ibv_video_form(vast_ibv_video_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(vast_ibv_video_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid(no_preview=True)    assert "All data verification is successful" == CompareUtil.verify_data(        pulled_creative_data_from_grid['general_information'],        vast_ibv_video_creative_grid_data['general_information_for_vast'])    pulled_creative_data_from_grid_2 = creative_list_page.get_creative_information_from_grid(row_number="2")    assert "All data verification is successful" == CompareUtil.verify_data(        pulled_creative_data_from_grid_2['general_information'],        vast_ibv_video_creative_grid_data['general_information_for_ibv'])    creative_list_page.search_and_action(vast_ibv_video_creative_grid_data['general_information_for_vast']['title'],                                         "Edit")    pulled_creative_data_from_gui = creative_form_page.get_vast_video_creative_information_from_form_page(        vast_ibv_video_creative_data)    vast_ibv_video_creative_data['general_information']['title'] = vast_ibv_video_creative_data['general_information'][                                                                       'title'] + " (VAST)"    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            vast_ibv_video_creative_data)    creative_list_page.search_and_action(vast_ibv_video_creative_grid_data['general_information_for_ibv']['title'],                                         "Edit")    pulled_creative_data_from_gui_2 = creative_form_page.get_ibv_video_creative_information_from_form_page(        ibv_video_creative_data)    ibv_video_creative_data['general_information']['playback_checkbox_status'] = ''    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui_2,                                                                            ibv_video_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(creative_to_delete, "Delete", force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_vast_video_type_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_vast_video_data.json') as json_file:        vast_video_creative_data = json.load(json_file)    vast_video_creative_data['general_information']['title'] = vast_video_creative_data['general_information'][                                                                   'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_vast_video_grid_data.json') as json_file:        vast_video_creative_grid_data = json.load(json_file)    vast_video_creative_grid_data['general_information']['title'] = vast_video_creative_data['general_information'][        'title']    # CREATE VAST VIDEO TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(vast_video_creative_data)    creative_form_page.provide_info_into_add_creative_vast_video_form(vast_video_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(vast_video_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid(no_preview=True)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            vast_video_creative_grid_data)    creative_list_page.search_and_action(vast_video_creative_data['general_information']['title'], "Edit")    pulled_creative_data_from_gui = creative_form_page.get_vast_video_creative_information_from_form_page(        vast_video_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            vast_video_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(vast_video_creative_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()def test_add_audio_creative(login_by_user_type):    config, driver = login_by_user_type    creative_form_page = DspDashboardCreativeForm(driver)    creative_list_page = DspDashboardCreativeList(driver)    sidebar_navigation = DashboardSidebarPage(driver)    with open('assets/creatives/creatives_audio_data.json') as json_file:        audio_creative_data = json.load(json_file)    audio_creative_data['general_information']['title'] = audio_creative_data['general_information'][                                                              'title'] + generic_modules.get_random_string(5)    with open('assets/creatives/creatives_audio_grid_data.json') as json_file:        audio_creative_grid_data = json.load(json_file)    audio_creative_grid_data['general_information']['title'] = audio_creative_data['general_information'][        'title']    # CREATE AUDIO TYPE CREATIVE    sidebar_navigation.navigate_to_creative_set()    creative_list_page.navigate_to_add_creative()    creative_form_page.provide_info_into_add_creative_set_form(audio_creative_data)    creative_form_page.provide_info_into_add_creative_audio_form(audio_creative_data)    # DATA VERIFICATION    creative_list_page.search_and_action(audio_creative_data['general_information']['title'])    time.sleep(BasePage.TWO_SEC_DELAY)    pulled_creative_data_from_grid = creative_list_page.get_creative_information_from_grid(no_preview=True)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_grid,                                                                            audio_creative_grid_data)    creative_list_page.search_and_action(audio_creative_data['general_information']['title'], "Edit")    pulled_creative_data_from_gui = creative_form_page.get_audio_creative_information_from_form_page(        audio_creative_data)    assert "All data verification is successful" == CompareUtil.verify_data(pulled_creative_data_from_gui,                                                                            audio_creative_data)    # CREATIVE CLEAN UP    creative_list_page.search_and_action(audio_creative_grid_data['general_information']['title'], "Delete",                                         force_reload=True)    assert "Creative set deleted successfully" in creative_list_page.get_success_message()