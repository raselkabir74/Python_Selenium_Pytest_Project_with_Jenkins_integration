import timefrom locators.campaign.campaign_goal_form_locator import CampaignGoalLocatorsfrom pages.base_page import BasePagecampaign_goal_information = {'campaign_goals': {}}class DspDashboardCampaignGoal(BasePage):    def __init__(self, driver):        super().__init__(driver)        self.driver = driver    def provide_campaign_goal_info(self, campaign_goal_data):        self.provide_campaign_goal_info_from_io_to_sales_manager_field(campaign_goal_data)        self.provide_campaign_goal_info_from_targeting_field_to_completed_checkbox(campaign_goal_data)        # SAVE        time.sleep(self.TWO_SEC_DELAY)        self.wait_for_element_to_be_clickable(CampaignGoalLocators.save_button_locator)        self.click_on_element(CampaignGoalLocators.save_button_locator)    def provide_campaign_goal_info_from_io_to_sales_manager_field(self, campaign_goal_data):        self.select_dropdown_value(CampaignGoalLocators.io_label, campaign_goal_data['campaign_goals']['io'])        self.select_specific_date_range(CampaignGoalLocators.date_label, "7 Days")        self.set_value_into_specific_input_field(CampaignGoalLocators.total_budget_label,                                                 campaign_goal_data['campaign_goals']['total_budget'])        self.select_dropdown_value(CampaignGoalLocators.reporting_type_label, select_by_value=True,                                   value=campaign_goal_data['campaign_goals']['reporting_type_value'])        self.select_dropdown_value(CampaignGoalLocators.select_goal_label,                                   campaign_goal_data['campaign_goals']['goal_item'])        self.set_value_into_specific_input_field(CampaignGoalLocators.select_goal_label,                                                 campaign_goal_data['campaign_goals']['goal'])        self.select_from_modal(campaign_goal_data['campaign_goals']['ad_ops_manager'],                               CampaignGoalLocators.ad_ops_manager_label)        self.select_from_modal(campaign_goal_data['campaign_goals']['external_ad_ops_manager'],                               CampaignGoalLocators.external_ad_ops_manager_label)        self.select_from_modal(campaign_goal_data['campaign_goals']['sales_manager'],                               CampaignGoalLocators.sales_manager_label)    def provide_campaign_goal_info_from_targeting_field_to_completed_checkbox(self, campaign_goal_data):        self.set_value_into_specific_input_field(CampaignGoalLocators.targeting_label,                                                 campaign_goal_data['campaign_goals']['targeting'], is_textarea=True)        self.set_value_into_specific_input_field(CampaignGoalLocators.comments_label,                                                 campaign_goal_data['campaign_goals']['comments'], is_textarea=True)        self.set_value_into_specific_input_field(CampaignGoalLocators.ticket_number_label,                                                 campaign_goal_data['campaign_goals']['ticket_number'],                                                 is_textarea=True)        self.set_value_into_specific_input_field(CampaignGoalLocators.recommended_notes_label,                                                 campaign_goal_data['campaign_goals']['recommended_notes'],                                                 is_textarea=True)        self.check_uncheck_specific_checkbox(CampaignGoalLocators.final_report_label,                                             bool(campaign_goal_data['campaign_goals']['final_report_checkbox_status']))        self.check_uncheck_specific_checkbox(CampaignGoalLocators.actual_recommended_spend_label,                                             bool(campaign_goal_data['campaign_goals'][                                                      'actual_recommended_spend_checkbox_status']))        self.set_value_into_element(CampaignGoalLocators.recommended_spent_field_locator,                                    campaign_goal_data['campaign_goals']['actual_recommended_spend'])        self.check_uncheck_specific_checkbox(CampaignGoalLocators.invoice_label,                                             bool(campaign_goal_data['campaign_goals']['invoice_checkbox_status']))        self.check_uncheck_specific_checkbox(CampaignGoalLocators.completed_label,                                             bool(campaign_goal_data['campaign_goals']['completed_checkbox_status']))    def get_campaign_goal_information(self):        time.sleep(self.TWO_SEC_DELAY)        self.get_campaign_goal_info_from_io_to_sales_manager_field()        self.get_campaign_goal_info_from_targeting_field_to_completed_checkbox()        return campaign_goal_information    def get_campaign_goal_info_from_io_to_sales_manager_field(self):        time.sleep(self.TWO_SEC_DELAY)        campaign_goal_information['campaign_goals']['io'] = self.get_text_or_value_from_selected_option(            CampaignGoalLocators.io_label)        campaign_goal_information['campaign_goals']['total_budget'] = self.get_text_using_tag_attribute(            self.input_tag, self.id_attribute, CampaignGoalLocators.budget_currency_id)        campaign_goal_information['campaign_goals'][            'reporting_type_value'] = self.get_text_or_value_from_selected_option(            CampaignGoalLocators.reporting_type_label, value=True)        campaign_goal_information['campaign_goals']['goal_item'] = self.get_element_text(            CampaignGoalLocators.select_goal_locator)        campaign_goal_information['campaign_goals']['goal'] = self.get_element_text(            CampaignGoalLocators.goal_amount_locator, input_tag=True)        campaign_goal_information['campaign_goals']['ad_ops_manager'] = self.get_selected_value_of_modal_from_field(            field_label=CampaignGoalLocators.ad_ops_manager_label)        campaign_goal_information['campaign_goals'][            'external_ad_ops_manager'] = self.get_selected_value_of_modal_from_field(            field_label=CampaignGoalLocators.external_ad_ops_manager_label)        campaign_goal_information['campaign_goals'][            'sales_manager'] = self.get_selected_value_of_modal_from_field(            field_label=CampaignGoalLocators.sales_manager_label)    def get_campaign_goal_info_from_targeting_field_to_completed_checkbox(self):        campaign_goal_information['campaign_goals'][            'targeting'] = self.get_text_using_tag_attribute(self.textarea_tag, self.name_attribute,                                                             CampaignGoalLocators.targeting_name)        campaign_goal_information['campaign_goals'][            'comments'] = self.get_text_using_tag_attribute(self.textarea_tag, self.name_attribute,                                                            CampaignGoalLocators.comments_name)        campaign_goal_information['campaign_goals'][            'ticket_number'] = self.get_text_using_tag_attribute(self.textarea_tag, self.name_attribute,                                                                 CampaignGoalLocators.ticket_number_name)        campaign_goal_information['campaign_goals'][            'final_report_checkbox_status'] = self.get_checkbox_status(CampaignGoalLocators.final_report_label)        campaign_goal_information['campaign_goals'][            'actual_recommended_spend_checkbox_status'] = self.get_checkbox_status(            CampaignGoalLocators.actual_recommended_spend_label)        campaign_goal_information['campaign_goals'][            'recommended_notes'] = self.get_text_using_tag_attribute(self.textarea_tag, self.name_attribute,                                                                     CampaignGoalLocators.recommended_notes_name)        campaign_goal_information['campaign_goals']['actual_recommended_spend'] = self.get_text_using_tag_attribute(            self.input_tag, self.id_attribute, CampaignGoalLocators.recommended_spent_id)        campaign_goal_information['campaign_goals'][            'invoice_checkbox_status'] = self.get_checkbox_status(CampaignGoalLocators.invoice_label)        campaign_goal_information['campaign_goals'][            'completed_checkbox_status'] = self.get_checkbox_status(CampaignGoalLocators.completed_label)